name: Weekly issue with vulnerabilities

on:
  schedule:
    - cron: "0 9 * * 1"
  workflow_dispatch:

jobs:
  create-weekly-issue:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write
      security-events: read
    steps:
      - name: Get today
        id: date
        run: echo "today=$(date -u +'%Y-%m-%d')" >> $GITHUB_OUTPUT
        
      - name: Fetch Dependabot vulnerabilities
        id: dependabot
        run: |
          critical_alerts=$(gh api repos/${{ github.repository }}/dependabot/alerts \
            --paginate -q '.[] | select(.security_vulnerability.severity=="critical") | "- [ ] " + .html_url')
          
          high_alerts=$(gh api repos/${{ github.repository }}/dependabot/alerts \
            --paginate -q '.[] | select(.security_vulnerability.severity=="high") | "- [ ] " + .html_url')

          {
            echo "alerts<<EOF"
            echo "### ðŸ”´ Critical"
            if [ -z "$critical_alerts" ]; then
              echo "âœ… None found"
            else
              echo "$critical_alerts"
            fi
            echo ""
            echo "### ðŸŸ  High"
            if [ -z "$high_alerts" ]; then
              echo "âœ… None found"
            else
              echo "$high_alerts"
            fi
            echo "EOF"
          } >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.PAT }}

      - name: Fetch CodeQL vulnerabilities
        id: codeql
        run: |
          gh api repos/${{ github.repository }}/code-scanning/alerts --paginate -q '.[]'
          
          critical_alerts=$(gh api repos/${{ github.repository }}/code-scanning/alerts \
            --paginate -q '.[] | select(.rule.severity=="critical") | "- [ ] " + .html_url')

          high_alerts=$(gh api repos/${{ github.repository }}/code-scanning/alerts \
            --paginate -q '.[] | select(.rule.severity=="high") | "- [ ] " + .html_url')
          
          {
            echo "alerts<<EOF"
            echo "### ðŸ”´ Critical"
            if [ -z "$critical_alerts" ]; then
              echo "âœ… None found"
            else
              echo "$critical_alerts"
            fi
            echo ""
            echo "### ðŸŸ  High"
            if [ -z "$high_alerts" ]; then
              echo "âœ… None found"
            else
              echo "$high_alerts"
            fi
            echo "EOF"
          } >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.PAT }}

      - name: Create weekly issue
        run: |
          body=$(cat <<EOF
          ### ðŸ¤– Dependabot vulnerabilities
          ${{ steps.dependabot.outputs.alerts }}

          ### ðŸ”’ CodeQL vulnerabilities
          ${{ steps.codeql.outputs.alerts }}
          EOF
          )

          gh issue create \
            --repo ${{ github.repository }} \
            --title "[tech-debt] ${{ github.repository }} - ${{ steps.date.outputs.today }}" \
            --body "$body" \
            --label "bug" \
            --milestone "1.0.0"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
